[{"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\index.js":"1","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\App.js":"2","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\reportWebVitals.js":"3","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\Components\\Navbar.js":"4","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\Components\\Footer.js":"5","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\FileUpload.js":"6"},{"size":1252,"mtime":1611526523573,"results":"7","hashOfConfig":"8"},{"size":9454,"mtime":1612366743978,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":620,"mtime":1612365754379,"results":"11","hashOfConfig":"8"},{"size":2329,"mtime":1611517217482,"results":"12","hashOfConfig":"8"},{"size":833,"mtime":1611463502300,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vwvfjj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\index.js",[],["30","31"],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\App.js",["32","33"],"import './App.css';\nimport React, { Component } from 'react';\nimport firebase from 'firebase'; // importando firebase \nimport FileUpload from './FileUpload';\nimport gmail from './assets/buscar.png';\nimport swal from 'sweetalert'; /* importando sweealert */\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // icon \nimport { faTimesCircle,faCheckCircle,faFileAlt,faUser,faAddressCard} from '@fortawesome/free-solid-svg-icons'; //icon \nimport { gsap } from \"gsap\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      pictures: [],\n      uploadValue: 0,\n      tiposolicitud: \"\",\n      asunto: \"\",\n      tipodocumento: \"\",\n      nrodocumento: \"\",\n      telefono: \"\",\n    };\n\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n  \n  componentWillMount() {\n    // Cada vez que el método 'onAuthStateChanged' se dispara, recibe un objeto (user)\n    // Lo que hacemos es actualizar el estado con el contenido de ese objeto.\n    // Si el usuario se ha autenticado, el objeto tiene información.\n    // Si no, el usuario es 'null'\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ user });\n    });\n  }\n  EnviarFirebase = (e) => {\n    e.preventDefault();\n    // ENVIANDO PARAMETROS PARA GUARDAR A LA BASE DE DATOS FIREBASE \n    const record = {\n      tiposolicitud: this.state.tiposolicitud,\n      asunto: this.state.asunto,\n      nombresapellidos: this.state.user.displayName,\n      tipodocumento: this.state.tipodocumento,\n      nrodocumento: this.state.nrodocumento,\n      email: this.state.user.email,\n      telefono: this.state.telefono,\n\n    };\n  \n    const dbRef = firebase.database().ref('Documentos'); // DOCUMENTOS ES EL NOMBRE DE LA RAMA PRINCIPAL \n    const newPicture = dbRef.push();\n    newPicture.set(record);\n    // LIMPIANDO LOS INPUTS LUEGO DE ENVIAR EL FORMULARIO \n    document.getElementById('nrodocumento').value='';  \n    document.getElementById('asunto').value=''; \n    document.getElementById('telefono').value=''; \n    document.getElementById('file').value=''; \n    document.getElementById('tiposolicitud').value=\"\" ;\n    document.getElementById('tipodocumento').value=\"\" ;\n\n    this.setState({ // EN ESTA PARTE VUELVE AL PROGRESSBAR EN 0\n      uploadValue: 0\n    })\n    swal(\n      {\n          text: \" Se registro correctamente su formulario a mesa de partes.\",\n          icon: \"success\",\n          button: \"Ok\",\n          timer: \"3000\",\n      });\n  \n  }\n\n  handleAuth() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase.auth().signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  }\n\n  handleLogout() {\n    firebase.auth().signOut()\n      .then(result => console.log(`${result.user.email} Salir`))\n      .catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  }\n\n  handleUpload(event) {\n    const file = event.target.files[0];\n    const storageRef = firebase.storage().ref(`Documentos/${file.name}`);\n    const task = storageRef.put(file);\n\n    // Listener que se ocupa del estado de la carga del fichero\n    task.on('state_changed', snapshot => {\n      // Calculamos el porcentaje de tamaño transferido y actualizamos\n      // el estado del componente con el valor\n      let percentage = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n      //  let percentage = (100*snapshot.getBytesTransferred())/snapshot.getTotalByteCount();\n      this.setState({\n        uploadValue: percentage\n      })\n    }, error => {\n      // Ocurre un error\n      console.error(error.message);\n    }, () => {\n       swal(\n        {\n            text: \" Se adjunto correctamente su archivo.\",\n            icon: \"success\",\n            button: \"Ok\",\n            timer: \"3000\",\n        });\n    });\n  }\n// Cuando el usuario quiere acceder debe autenticarse por su cuenta gmail\n  renderLoginButton() {\n    if (!this.state.user) {\n      return (\n        <>\n          <div className=\"container text-center\">\n            <br />\n            <div className=\"jumbotron jumbotron-fluid\">\n              <div className=\"container\">\n              <br /><br />\n                <h1 className=\"display-4\">Instrucciones</h1>\n                <p className=\"lead text-white texto\" >Primero debe iniciar sesión con su cuenta gmail , para poder realizar su solicitud por mesa de partes.</p>\n              </div>\n            </div>\n            <button onClick={this.handleAuth} className=\"App-btn\">\n              <img src={gmail} /> Iniciar sesión Gmail\n            </button>\n            <br /> <br />\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n        <div className=\"separar\">    \n        </div> \n        <div className=\"card col\">\n          <div className=\"container\">\n               <br /> <br /> <br /> \n              <strong className=\"\" style={{ color: \"#004C4C\" }} >¡Hola, <FontAwesomeIcon className=\"fa-icon\" icon={faUser}/> {this.state.user.displayName}!</strong>\n              <button onClick={this.handleLogout} className=\"btn btn-danger\" style={{ float: \"right\" }}> <FontAwesomeIcon className=\"fa-icon\" icon={faTimesCircle}/> Salir</button> \n          </div> \n          <span className=\"badge bg-info text-white\" style={{ marginTop: \"10px\" }}><FontAwesomeIcon className=\"fa-icon\" icon={faFileAlt}/> Registro de expediente</span>\n          <form className=\"form-group\" onSubmit={this.EnviarFirebase}>\n            <br />\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <select id=\"tiposolicitud\" className=\"form-control\" name=\"tiposolicitud\" onChange={(e) => this.setState({ tiposolicitud: e.target.value })} required>\n                  <option value=\"\" selected> Seleccione el tipo solicitud </option>\n                  <option value=\"CAS\"> CONVOCATORIA CAS </option>\n                  <option value=\"PRACTICAS\"> PRACTICAS </option>\n                  <option value=\"TRAMITES\"> TRAMITES </option>\n                  <option value=\"OTROS\"> OTROS </option>\n                </select>\n              </div>\n              <div className=\"form-group col-md-5\">\n                <input type=\"text\" className=\"form-control\" id=\"asunto\" name=\"asunto\" onChange={(e) => this.setState({ asunto: e.target.value })} placeholder=\"Asunto de la solicitud\"   required minLength=\"4\"/>\n              </div>\n            </div>\n            <h5> <FontAwesomeIcon className=\"fa-icon\" icon={faAddressCard}/> Datos Personales  <img  className=\"imgRedonda\"src={this.state.user.photoURL}/> </h5>\n            <hr></hr>\n            <div className=\"form-group\">\n              <label>Nombres y Apellidos</label>\n              <input type=\"text\" className=\"form-control\" value={this.state.user.displayName} disabled />\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <select id=\"tipodocumento\" className=\"form-control\" name=\"tipodocumento\" onChange={(e) => this.setState({ tipodocumento: e.target.value })} required>\n                  <option value=\"\"> Seleccione el tipo documento </option>\n                  <option value=\"DNI\">DNI</option>\n                  <option value=\"CARNET EXTRANJERIA\"> Carnet Extranjería </option>\n                </select>\n              </div>\n              <div className=\"form-group col-md-5\">\n                <input type=\"text\" className=\"form-control\" id=\"nrodocumento\" name=\"nrodocumento\" placeholder=\"Nro documento\" onChange={(e) => this.setState({ nrodocumento: e.target.value })}   required/>\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <label>Correo electrónico</label>\n                <input type=\"text\" className=\"form-control\" value={this.state.user.email} disabled />\n              </div>\n              <div className=\"form-group col-md-5\">\n                <label >Teléfono</label>\n                <input type=\"text\" className=\"form-control\"  id=\"telefono\"  name=\"telefono\" onChange={(e) => this.setState({ telefono: e.target.value })} required/>\n              </div>\n            </div>\n            <FileUpload onUpload={this.handleUpload} uploadValue={this.state.uploadValue} />\n            <div className=\"container text-center\">\n            <button className=\"btn btn-success\" style={{ marginTop: \"-5px\" }} > <FontAwesomeIcon className=\"fa-icon\" icon={faCheckCircle}/> Enviar</button>\n            </div>\n          </form>\n        </div>\n        <br />\n        </>\n      );\n    }\n  }\n  render() {\n    // animación \n    let tl = gsap.timeline({ repeat: -1, repeatDelay: 1 });\n    tl.to('#titulo', {\n            duration: 2,\n            x: 120,\n            ease: 'linear'\n   });\n   tl.to('#logo', {\n   duration: 2,\n   rotate: 360\n   });\n   tl.to('#logo-github', {\n    duration: 2,\n    rotate: 360\n   });\n   \n    return (\n      <section id=\"inicioSesion\">\n        <div className=\"container\" style={{padding:\"150px\"}}>\n          <div className=\"row\">\n            <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-12\">\n            </div>\n            <div className=\"col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n              {this.renderLoginButton()}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nexport default App;","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\reportWebVitals.js",[],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\Components\\Navbar.js",["34"],"import React from 'react';\r\nimport icon from '../assets/icon.png';\r\nfunction Navbar() {\r\n  \r\n    return (\r\n     \r\n        <nav id=\"nav-color\" className=\"navbar navbar-light bg-light fixed-top \">\r\n        <div className=\"container-fluid padding\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n                <img id=\"logo\" src={icon} alt=\"\" width=\"48\" height=\"48\" className=\"d-inline-block align-top margen logo\" style={{marginTop:\"-10px\"}} />\r\n                <label id=\"titulo\" className=\"text-white\"> Mesa Partes Virtual </label> \r\n            </a>\r\n        </div>\r\n    </nav>\r\n    );\r\n}\r\nexport default Navbar;","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\Components\\Footer.js",["35","36"],"import React from 'react';\r\nimport icon from '../assets/logogithub.png';\r\nfunction Footer() {\r\n      \r\n    return (\r\n        <footer id=\"footer\" className=\"padded\">\r\n                    <div className=\"container\">\r\n                        <h6 className=\"text-center text-white\"> 2021 - Todos los derechos reservados </h6>\r\n                        <div className=\"col text-center\">\r\n                            <h4 id=\"name\" className=\"text-center text-white\" >\r\n                                <span> P</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">d</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">o</span> \r\n                                <span> M</span><span className=\"name_animation transparent\">a</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">u</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">l</span>\r\n                                <span> A</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">t</span><span className=\"name_animation transparent\">o</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">i</span><span className=\"name_animation transparent\">o</span>\r\n                                <span> J</span><span className=\"name_animation transparent\">u</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">a</span><span className=\"name_animation transparent\">d</span><span className=\"name_animation transparent\">o</span>\r\n                                <span> M</span><span className=\"name_animation transparent\">o</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">o </span>\r\n                                <a href=\"https://github.com/PedroManuelJM\" target=\"_blank\"><img id=\"logo-github\" src={icon} /></a>\r\n                            </h4>    \r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\mesapartesvirtual\\src\\FileUpload.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":131,"column":15,"nodeType":"43","endLine":131,"endColumn":34},{"ruleId":"41","severity":1,"message":"42","line":165,"column":96,"nodeType":"43","endLine":165,"endColumn":156},{"ruleId":"44","severity":1,"message":"45","line":9,"column":13,"nodeType":"43","endLine":9,"endColumn":50},{"ruleId":"46","severity":1,"message":"47","line":16,"column":33,"nodeType":"43","endLine":16,"endColumn":92},{"ruleId":"41","severity":1,"message":"42","line":16,"column":92,"nodeType":"43","endLine":16,"endColumn":127},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]